#ifndef _INC_FLATTEN_BINARY_TREE_TO_LINKED_LIST_
#define _INC_FLATTEN_BINARY_TREE_TO_LINKED_LIST_

#include "_common_all.h"
#include "_common_list.h"
#include "_common_binary_tree.h"

/* Generated by leetgen (github.com/sryanyuan/leetgen)
Given a binary tree, flatten it to a linked list in-place.

For example, given the following tree:


    1
   / \
  2   5
 / \   \
3   4   6


The flattened tree should look like:


1
 \
  2
   \
    3
     \
      4
       \
        5
         \
          6

*/

class FlattenBinaryTreeToLinkedList : public TreeNodeCls {
public:
	static void test() {
		
	}

	static void flatten(TreeNode* root) {
		walk(root);
	}

    static void walk(TreeNode *node) {
        if (nullptr == node) {
            return;
        }
        walk(node->left);
        TreeNode *prev = node->right;
        node->right = node->left;
        node->left = nullptr;
    }
};

#endif
