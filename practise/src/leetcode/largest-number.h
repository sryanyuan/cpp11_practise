#ifndef _INC_LARGEST_NUMBER_
#define _INC_LARGEST_NUMBER_

#include "_common_all.h"
#include "_common_list.h"
#include "_common_binary_tree.h"

/* Generated by leetgen (github.com/sryanyuan/leetgen)
Given a list of non negative integers, arrange them such that they form the largest number.

Example 1:


Input: [10,2]
Output: "210"

Example 2:


Input: [3,30,34,5,9]
Output: "9534330"


Note: The result may be very large, so you need to return a string instead of an integer.
*/

class LargestNumber {
public:
	static void test() {
		
	}

	static string largestNumber(vector<int>& nums) {
		vector<string> nstrs;
        bool allZero = true;
        for (auto v : nums) {
            if (v != 0) {
                allZero = false;
            }
            auto ns = std::to_string(v);
            nstrs.push_back(std::move(ns));
        }
        if (allZero) {
            return "0";
        }
        string res;
        std::sort(nstrs.rbegin(), nstrs.rend(), [](string &a, string &b) -> bool {
            if (a + b < b + a) {
                return true;
            }
            return false;
        });
        for (auto &v : nstrs) {
            res += v;
        }
        return res;
	}
};

#endif
