#ifndef _INC_BINARY_TREE_PREORDER_TRAVERSAL_
#define _INC_BINARY_TREE_PREORDER_TRAVERSAL_

#include "_common_all.h"
#include "_common_list.h"
#include "_common_binary_tree.h"

/* Generated by leetgen (github.com/sryanyuan/leetgen)
Given a binary tree, return the preorder traversal of its nodes' values.

Example:


Input: [1,null,2,3]
   1
    \
     2
    /
   3

Output: [1,2,3]


Follow up: Recursive solution is trivial, could you do it iteratively?
*/

class BinaryTreePreorderTraversal : public TreeNodeCls {
public:
	static void test() {
		
	}

	static vector<int> preorderTraversal(TreeNode* root) {
		vector<int> res;
		if (nullptr == root) {
			return res;
		}
		walk(root, res);
		return res;
	}

	static void walk(TreeNode *node, vector<int> &res) {
		if (nullptr == node) {
			return;
		}
		res.push_back(node->val);
		walk(node->left, res);
		walk(node->right, res);
	}
};

#endif
