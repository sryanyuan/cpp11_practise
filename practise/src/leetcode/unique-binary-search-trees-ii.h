#ifndef _INC_UNIQUE_BINARY_SEARCH_TREES_II_
#define _INC_UNIQUE_BINARY_SEARCH_TREES_II_

#include "_common_all.h"
#include "_common_list.h"
#include "_common_binary_tree.h"

/* Generated by leetgen (github.com/sryanyuan/leetgen)
Given an integer n, generate all structurally unique BST's (binary search trees) that store values 1 ... n.

Example:


Input: 3
Output:
[
  [1,null,3,2],
  [3,2,null,1],
  [3,1,null,null,2],
  [2,1,3],
  [1,null,2,null,3]
]
Explanation:
The above output corresponds to the 5 unique BST's shown below:

   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3

*/

class UniqueBinarySearchTreesIi : public TreeNodeCls {
public:
	static void test() {
		
	}

	static vector<TreeNode*> generateTrees(int n) {
		vector<TreeNode*> res;
	}
};

#endif
