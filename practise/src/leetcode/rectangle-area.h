#ifndef _INC_RECTANGLE_AREA_
#define _INC_RECTANGLE_AREA_

#include "_common_all.h"
#include "_common_list.h"
#include "_common_binary_tree.h"

/* Generated by leetgen (github.com/sryanyuan/leetgen)
Find the total area covered by two rectilinear rectangles in a 2D plane.

Each rectangle is defined by its bottom left corner and top right corner as shown in the figure.



Example:


Input: A = -3, B = 0, C = 3, D = 4, E = 0, F = -1, G = 9, H = 2
Output: 45

Note:

Assume that the total area is never beyond the maximum possible value of int.
*/

class RectangleArea {
public:
	static void test() {
		
	}

	static int computeArea(int A, int B, int C, int D, int E, int F, int G, int H) {
		int totalArea = (C - A) * (D - B) + (G - E) * (H - F);
        if (E >= C || F >= D || G <= A || H <= B) {
            return totalArea;
        }
        return totalArea - (std::min(C, G) - std::max(E, A)) * (std::min(D, H) - std::max(F, B));
	}
};

#endif
